[build-system]
requires = [
  "setuptools>=61.0.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "pytest-flakefighter"
authors = [{ name = "TestFLARE Team" },]
description = "Pytest plugin implementing flaky test failure detection and classification."
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
dependencies = [
    "pytest>=6.2.0",
    "coverage>=7.10.6",
    "GitPython>=3.1.45",
    "unidiff>=0.7.5",
    "sqlalchemy>=2.0.43",
    "dotenv>=0.9.9"
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "black",
    "pytest-cov",
    "pylint==2.4.2", # the version used by the CI workflow
    "pre_commit",
    "sphinx-autoapi",
    "sphinx_rtd_theme",
    "tox>=4.31.0"
]

[project.urls]
Repository = "https://github.com/test-flare/pytest-flakefighter"

[project.entry-points.pytest11]
flakefighter = "pytest_flakefighter.plugin"

[tool.pylint]
ignore-paths="tests/resources"
disable=[
  "raw-checker-failed",
  "bad-inline-option",
  "locally-disabled",
  "file-ignored",
  "suppressed-message",
  "useless-suppression",
  "deprecated-pragma",
  "use-symbolic-message-instead",
  "logging-fstring-interpolation",
  "import-error",
  "unspecified-encoding"
]
max-line-length=120
variable-rgx="^[a-z][a-z0-9]*((_[a-z0-9]+)*)?$"
good-variables=[
  "db"
]

[tool.black]
# https://github.com/psf/black
line-length = 120
target-version = ["py310"]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests"
]
[tool.isort]
profile = "black"

[tool.tox]
requires = ["tox>=4.19"]
env_list = ["3.10","3.11","3.12","3.13"]
skip_missing_interpreters = false  # fail if devs donâ€™t have all required Python versions

# Base configuration for all test environments
[tool.tox.env_run_base]
description = "Run pytest under {base_python}"
extras = ["dev","test"]
deps = ["pytest","pytest-cov"]
commands = [["pytest","-p","no:flakefighter","--cov=src","--cov-report=xml","{posargs}"]]
